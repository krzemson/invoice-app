<?xml version="1.0" encoding="UTF-8" standalone="yes"?><danepracy><studiauczelnia>Uniwersytet Gdański</studiauczelnia><studiawydzial>Wydział Matematyki, Fizyki i Informatyki</studiawydzial><studiakierunek>Informatyka</studiakierunek><studiatryb>niestacjonarne zaoczne</studiatryb><studentimie>Jakub</studentimie><studentnazwisko>Krzemiński</studentnazwisko><studentalbum>240302</studentalbum><pracaopiekun>prof. UG, dr hab. Christoph Schwarzweller</pracaopiekun><pracaprowadzacy>prof. UG, dr hab. Christoph Schwarzweller</pracaprowadzacy><pracatytul>Wykorzystanie algorytmu ekstrakcji danych w systemie do zarządania fakturami opartym o architekturę REST API</pracatytul><pracadziedzina>11.3|Informatyka</pracadziedzina><pracarok>2019</pracarok><pracadatazlozenia>18-10-2019</pracadatazlozenia><pracastreszczenie>Omawiana praca porusza zagadnienia z zakresu architektury oprogramowa- nia, nauczania maszynowego, wyrażeń regularnych oraz relacji pomiędzy apli- kacją webową a aplikacją w systemie Android. Wymienione wcześniej zagad- nienia użyte zostały w celu stworzenia intuicyjnego oraz łatwego w obsłudze systemu dla księgowości. Napisany system składa się z trzech głównych czę- ści:&#xD;
• Aplikacji w systemie Android. &#xD;
• Aplikacji webowej.&#xD;
• Algorytmu ekstrakcji danych.&#xD;
Aplikacja Webowa z aplikacją mobilną komunikują się na zasadzie klient- serwer, część webowa jest w tym przypadku serwerem, natomiast część mo- bilna klientem. Do takiej wymiany danych została użyta architektura REST – ang. Representational State Transfer. Algorytm ekstrakcji danych jest wy- korzystany przedewszystkim do wydobycia danych z zeskanowanej faktury a następnie ich sklasyfikowania. Przetworzony oraz sklasyfikowany zestaw danych wysyłany jest do bazy danych.&#xD;
Zaprezentowane w pracy dotychczasowe zagadnienia posiadają na rynku produkty, które przetwarzają skany faktur w czasie rzeczywistym na dane tekstowe, aczkolwiek ilość ich jest bardzo ograniczona. Dodatkowo autor poddaje analizie dwie główne technologie wymiany danych REST oraz SOAP oraz przedstawia ich szczegółową charakterystykę, omawia wady oraz zalety danego rozwiązania i na samych końcu podsumowuje przytoczone argumenty.&#xD;
W pracy również znalazła się część poświęcona wiedzy teoretycznej to znaczy, jakich technologi autor użył do implementacji napisanego systemu oraz krótko je opisuje. W kolejnych rozdziałach autor skupia się na analizie, implementacji oraz prezentacji opisywanego systemu. Na zakończenie podsu- mowano przydatność oraz wydajność stworzonego prototypu, autor również krótko poddaje podsumowuje rowzój projektu w dalszych latach.</pracastreszczenie><pracaslowakluczowe>Machine Learning, Programowanie, Python, RESTful API, PHP, JAVA, Android, Wyrażenia Regularne, Analiza, Ekstrakcja Danych, OCR</pracaslowakluczowe><pracaspistresci>Wprowadzenie .............................. 9&#xD;
1. WprowadzeniedoarchitekturyREST. . . . . . . . . . . . . . 11&#xD;
1.1. APIiichrodzaje ......................... 14 1.1.1. Bibliotekiiframeworki.................. 15 1.1.2. Systemyoperacyjne ................... 15 1.1.3. ZdalneAPI ........................ 16 1.1.4. WebApi.......................... 16&#xD;
1.2. RESTvsSOAP.......................... 17 1.2.1. CharakterystykaREST ................. 18 1.2.2. CharakterystykaSOAP ................. 19&#xD;
1.3. Podsumowanie .......................... 20&#xD;
2. Analizaobecnieistniejącychrozwiązań . . . . . . . . . . . . . 23 2.1. SkanujFakture........................... 23 2.2. Rossum .............................. 24 2.3. docparser ............................. 25 2.4. Sypht ............................... 26 2.5. Palette............................... 27&#xD;
3. Zastosowanetechnologie ...................... 29&#xD;
3.1. Językiprogramistyczne...................... 29 3.1.1. PHP............................ 29 3.1.2. JAVA ........................... 31 3.1.3. Python .......................... 33&#xD;
3.2. Bazydanych ........................... 34 3.2.1. MySQL .......................... 34&#xD;
3.3. Wzorceprojektowe ........................ 35 3.3.1. Singleton ......................... 36 3.3.2. Fasada........................... 37&#xD;
56&#xD;
3.4.&#xD;
3.5.&#xD;
3.6.&#xD;
Spis treści&#xD;
Frameworki,biblioteki oraz komponenty . . . . . . . . . . . . . 39 3.4.1. jQuery........................... 39 3.4.2. Bootstrap......................... 39 3.4.3. tesseract.......................... 40 3.4.4. mpdf............................ 41 3.4.5. invoice2data........................ 41 Komunikacjaklient-serwer.................... 41 3.5.1. RESTfulAPI....................... 41 3.5.2. JSONorazJWT ..................... 42 Narzędziaiśrodowiskapracy .................. 43 3.6.1. PHPStorm ........................ 44 3.6.2. AndroidStudio...................... 44 3.6.3. XAMPP.......................... 45&#xD;
4.Koncepcja............................... 46 4.1. Klientkońcowy .......................... 46 4.2. Wymagania ............................ 46 4.3. Opisfunkcjonalności ....................... 47&#xD;
5. Implementacja ............................ 49&#xD;
5.1. Aplikacjawebowa......................... 49 5.1.1. Środowiskouruchomieniowe ............... 49 5.1.2. Projektbazydanych ................... 50 5.1.3. Połączeniezbaządanych ................ 51 5.1.4. Autoryzacja........................ 52 5.1.5. Sesjaużytkownika .................... 55 5.1.6. Automatyczneładowanieklas .............. 58 5.1.7. AbstrakcyjnaklasaModel ................ 58 5.1.8. RESTfulAPI....................... 62&#xD;
5.2. Aplikacjamobilna ........................ 63 5.2.1. Środowiskouruchomieniowe ............... 63 5.2.2. Autoryzacja........................ 64 5.2.3. UserInterface....................... 66&#xD;
Spis treści 7&#xD;
5.2.4. Żądania .......................... 67&#xD;
5.2.5. Fragmenty......................... 69 5.3. Algorytmekstrakcjidanych ................... 70&#xD;
6. Prezentacja . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 73&#xD;
6.1. Aplikacjawebowa......................... 73 6.1.1. Panellogowania ..................... 73 6.1.2. Panelrejestracji ..................... 74 6.1.3. Dashboard ........................ 75 6.1.4. Widokfaktursprzedaży ................. 75 6.1.5. Widokdodaniafakturysprzedaży. . . . . . . . . . . . 76 6.1.6. Widokklientów...................... 76 6.1.7. Widokdodaniafakturyzakupu . . . . . . . . . . . . . 77 6.1.8. Widokdodaniaklienta.................. 77 6.1.9. Widokprofiluużytkownika ............... 78 6.1.10. Widok wygenerowanej faktury w formacie PDF . . . . 79&#xD;
6.2. Aplikacjamobilna ........................ 80 6.2.1. Widokedycjifakturorazichdodania . . . . . . . . . . 81 6.2.2. Panelelogowaniaorazrejestracji . . . . . . . . . . . . 82 6.2.3. Dashboard ........................ 83 6.2.4. Widokfakturorazichusunięcia . . . . . . . . . . . . . 83 6.2.5. Widokkontaużytkownika................ 84&#xD;
7. Podsumowanie ............................ 86 7.0.1. UX/UI.......................... 86 7.0.2. Automatyzacja ...................... 87 7.0.3. Rozwójprojektu ..................... 88&#xD;
Zakończenie................................ 90 A.OpiszawartościnośnikaCD.................... 92 Bibliografia ................................ 93 Spistabel ................................. 95&#xD;
8 Spis treści&#xD;
Spisrysunków .............................. 96 Oświadczenie ............................... 97</pracaspistresci></danepracy>